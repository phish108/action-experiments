
name: one

# Controls when the action will run. 
on:
  push:
    branch: 
    - master
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      - id: chg_files
        uses: jitterbit/get-changed-files@v1
        with:
          format: json

      - name: check hold
        id: holdrelease
        uses: actions/github-script@v3
        env:
          DATA: ${{ steps.chg_files.outputs.all }}
        with:
          script: |
            files = JSON.parse(process.env.DATA)
            hold = files
              .map(file => (file.startsWith('.github/') || 
                            file.startsWith('tests/') ||
                            file.startsWith('test/') || 
                            file.startsWith('.gitignore')))
              .reduce((sw,c) => (sw && c), true)
            core.setOutput('hold', JSON.stringify({hold}))
      - name: is hold release
        run: | 
          echo "${{ steps.holdrelease.outputs.hold }}" >> myVars.env
      - name: Upload variables
        uses: actions/upload-artifact@v2
        with:
          name: variables
          path: myVars.env

  deploy: 
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download variables
        uses: actions/download-artifact@v2
        with:
          name: variables

      - id: vjson 
        run: echo "::set-output name=vars::$(cat myVars.env)"

      - name: trigger external
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.TRIGGER_TOKEN }}
          script: |
            varsStr = ${{steps.vjson.outputs.vars}}
            console.log("vars" + varsStr)
            vars = JSON.parse(varsStr)
            console.log(vars)
            if (vars && vars.hold != true)
              console.log("release via task two")
              await github.actions.createWorkflowDispatch({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  ref: context.ref,
                  workflow_id: "two.yml"
                })
            }
            console.log("done")
