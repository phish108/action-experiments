
name: one

# Controls when the action will run. 
on:
  push:
    branch: 
    - master
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      - id: chg_files
        uses: jitterbit/get-changed-files@v1
        with:
          format: json

      - name: check hold
        id: holdrelease
        uses: actions/github-script@v3
        with:
          script: |
            console.log(JSON.stringify(context, null , "  "))
            files = ${{ steps.chg_files.outputs.all }}
            hold = files
              .map(file => (file.startsWith('.github/') || 
                            file.startsWith('tests/') ||
                            file.startsWith('test/') || 
                            file.startsWith('.gitignore')))
              .reduce((sw,c) => (sw && c), true)
            core.setOutput('hold_protected', hold)

            hold2 = files
              .map(file => (file == 'package.json' || 
                            file == 'package-lock.json'))
              .reduce((sw,c) => (sw && c), true)
            if (hold2) {
              // get changes for package.json
              // get package.json if exists
              // get devDependencies
            }

      - name: trigger external
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.TRIGGER_TOKEN }}
          script: |
            const myvars = ${{steps.holdrelease.outputs.hold}}
            core.info(JSON.stringify(myvars))
            if (myvars && myvars.hold_protected != true) {
              core.info("release via task two")
              await github.actions.createWorkflowDispatch({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  ref: context.ref,
                  workflow_id: "two.yml",
                  inputs: {"funny": JSON.stringify(${{ steps.chg_files.outputs.all }}) }
                })
            }
            core.info("done")
